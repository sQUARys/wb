package main

import (
	"fmt"
	"sync"
	"time"
)

//Реализовать все возможные способы остановки выполнения горутины.

func main() {
	var wg sync.WaitGroup //переменная для синхронизации горутин

	StopChan := make(chan bool) // открываем не буферизированный канал принимающий только булевые значения

	wg.Add(1) // добавляем к синхронизации горутину

	go func() { // запускаем горутину
		for {
			select {
			case <-StopChan: // если в канал поступило сообщение о завершении
				defer wg.Done()
				return //выходим из цикла
			default:
				fmt.Println("HI") // выводим какое-либо сообщение
			}
		}
	}()

	time.Sleep(1)    // для того, чтобы можно было увидеть сообщение из дефолтного кейса
	StopChan <- true // передаем в канал сообщение о завершении его работы
	wg.Wait()        // ждем окончания горутины

}
